"""
Usage:  [OPTIONS] COMMAND [ARGS]...

  A cli for {{ cookiecutter.package_name }}.

Options:
  --help  Show this message and exit.
"""
from pathlib import Path
import re
import os

import click


@click.group()
def main():
    """A cli for {{ cookiecutter.package_name }}."""
    pass


# the following import will only work if the
# package was installed in editable (development)
# mode, which is what we want

try:
    from run import main as development_tasks

    main.add_command(development_tasks, name='dev')
except (ImportError, ModuleNotFoundError):
    pass


def transform_module_text(matchobj):
    """Return the text from the module with the docstring generated by click prepended to it."""
    with click.Context(main) as ctx:
        docstring = os.linesep.join(['"""', ctx.get_help(), '"""'])

    return docstring + os.linesep + ''.join(matchobj.groups()[1:])


# replace this module's docstring with the one generated from top-level cli entrypoint
# we do this for the sake of having the module docstring reflect what the cli does
# which is useful particularly since sphinx will use the module's docstring in the
# package documentation it generates

transformed_module_text = re.sub(
    re.compile(r'(.*?)(from|import)(.*)', re.DOTALL | re.MULTILINE),
    transform_module_text,
    Path(__file__).read_text()
)
with Path(__file__).open('w') as this_module:
    this_module.write(transformed_module_text)

if __name__ == "__main__":
    main()
